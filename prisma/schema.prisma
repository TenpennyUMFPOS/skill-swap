generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                 String  @id @default(cuid())
  first_name String
  last_name  String
  email      String   @unique
  gender     String
  job        String?
  jobDes     String?
  avatar_url String?
  birth      String
  country    String
  city       String
  about      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  likes      Like[]
  mathces    Match[]
  skills     Skill[]
  photos     Photo[]
  rejects    Reject[]
  socials    Social[]
}

model Skill {
  id                 String  @id @default(cuid())
  skill   String
  user_id String
  user    User   @relation(fields: [user_id], references: [id])
}

model Photo {
  id                 String  @id @default(cuid())
  url     String
  user_id String
  user    User   @relation(fields: [user_id], references: [id])
}

model Social {
  id                 String  @id @default(cuid())
  personal_website String?
  facebook         String?
  twitter          String?
  linkedin         String?
  github           String?
  instagram        String?
  user_id          String
  user             User   @relation(fields: [user_id], references: [id])
}

model Like {
  id                 String  @id @default(cuid())
  user_id      String
  likedUser_id String
  user         User @relation(fields: [user_id], references: [id])

  @@unique([user_id, likedUser_id])
}

model Reject {
  id                 String  @id @default(cuid())
  user_id         String
  rejectedUser_id String
  user            User @relation(fields: [user_id], references: [id])

  @@unique([user_id, rejectedUser_id])
}

model Match {
  id                 String  @id @default(cuid())
  user_id        String
  matchedUser_id String
  user           User @relation(fields: [user_id], references: [id])

  @@unique([user_id, matchedUser_id])
}
