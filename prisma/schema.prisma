// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  password   String
  gender     String
  job        String
  jobDes     String
  avatar_url String
  birth      String
  country    String
  city       String
  about      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  skills     Skill[]
  photos     Photo[]
  socials    Social[]
  likes      Like[]
  rejects    Reject[]
  mathces    Match[]
}

model Skill {
  id      Int    @id @default(autoincrement())
  skill    String
  user    User   @relation(fields: [user_id], references: [id])
  user_id Int
}

model Photo {
  id      Int    @id @default(autoincrement())
  url     String
  user    User   @relation(fields: [user_id], references: [id])
  user_id Int
}

model Social {
  id               Int    @id @default(autoincrement())
  personal_website String
  facebook         String
  twitter          String
  linkedin         String
  github           String
  instagram        String
  user             User   @relation(fields: [user_id], references: [id])
  user_id          Int
}

model Like {
  id           Int  @id @default(autoincrement())
  user         User @relation(fields: [user_id], references: [id])
  user_id      Int
  likedUser_id Int

  @@unique([user_id, likedUser_id])
}

model Reject {
  id              Int  @id @default(autoincrement())
  user            User @relation(fields: [user_id], references: [id])
  user_id         Int
  rejectedUser_id Int

  @@unique([user_id, rejectedUser_id])
}

model Match {
  id             Int  @id @default(autoincrement())
  user           User @relation(fields: [user_id], references: [id])
  user_id        Int
  matchedUser_id Int

  @@unique([user_id, matchedUser_id])
}
